version: '3.8'

services:
  app:
    build: .
    container_name: financebroke-app
    ports:
      - "80:80"
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=financebroke_db
      - DB_PORT=5432
      - PORT=8080
      - JWT_SECRET=${JWT_SECRET}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - FROM_EMAIL=${FROM_EMAIL}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - financebroke-network
    volumes:
      - app-logs:/app/logs

  postgres:
    image: postgres:15-alpine
    container_name: financebroke-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=financebroke_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend/database_setup.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - financebroke-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d financebroke_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  nginx:
    image: nginx:alpine
    container_name: financebroke-nginx
    ports:
      - "443:443"
    volumes:
      - ./nginx-ssl.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - financebroke-network
    profiles:
      - ssl

volumes:
  postgres-data:
    driver: local
  app-logs:
    driver: local
  nginx-logs:
    driver: local

networks:
  financebroke-network:
    driver: bridge